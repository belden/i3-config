#!/bin/bash

scrot - | convert - -negate -blur 0x5 - > /tmp/screenshot.png
~/.config/i3/bin/i3-caffeine tired &
xset dpms force off

# Turn on DND
#old_dnd="$(xfconf-query -c xfce4-notifyd -p /do-not-disturb)"
#xfconf-query -c xfce4-notifyd -p /do-not-disturb -s true

# Pause stuff and mute audio
#playerctl -a pause > /dev/null
#old_mute="$(amixer get Master | tail -2 | grep '\[on\]')"
#amixer set Master mute > /dev/null

# Waits for i3lock to die or valid fingerprint to kill i3lock
wait_fingerprint() {
#   let i=0
    while pidof i3lock > /dev/null; do
#       start=$(date +%s)
        if (timeout 5 fprintd-verify | grep -q verify-match); then
            pkill i3lock
        fi
#       end=$(date +%s)
#       i=$(( $i + 1 ))
#       if [[ $i -eq 5 ]]; then
#         i=0
#         sleep $(( 5 - $(( $end - $start )) ))
#         xset dpms force off
#       fi
    done
}

# Code taken from xss-lock transfer sleep lock example
if [[ -e /dev/fd/${XSS_SLEEP_LOCK_FD:--1} ]]; then
    kill_i3lock() {
        pkill -xu $EUID "$@" i3lock
    }

    trap kill_i3lock TERM INT

    # we have to make sure the locker does not inherit a copy of the lock fd
    i3lock -ui /tmp/screenshot.png {XSS_SLEEP_LOCK_FD}<&-

    # now close our fd (only remaining copy) to indicate we're ready to sleep
    exec {XSS_SLEEP_LOCK_FD}<&-

    wait_fingerprint
else
    trap 'kill %%' TERM INT
    i3lock -ni /tmp/screenshot.png &
    wait_fingerprint
fi

# Set settings back to what they were before
#test -z "$old_mute" || amixer set Master unmute > /dev/null
#test "$old_dnd" = false && xfconf-query -c xfce4-notifyd -p /do-not-disturb -s false

### xss-lock command
#xss-lock --transfer-sleep-lock -- ~/scripts/lock.sh
